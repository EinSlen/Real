{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Valentin\\\\Desktop\\\\Developper\\\\LGBTapp\\\\Real\\\\frontend\\\\components\\\\main\\\\Setting.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUsersData } from \"../../redux/actions/index\";\n\nfunction Setting(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      SetUser = _useState2[1];\n\n  firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).get().then(function (snapshot) {\n    if (snapshot.exists) {\n      SetUser(snapshot.data());\n    } else {\n      console.log(\"Setting user does not exist\");\n    }\n  });\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"YAYA\"), console.log(props), console.log(user));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    users: store.usersState.users\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUsersData: fetchUsersData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Setting);","map":{"version":3,"sources":["C:/Users/Valentin/Desktop/Developper/LGBTapp/Real/frontend/components/main/Setting.js"],"names":["React","useState","useEffect","firebase","require","connect","bindActionCreators","fetchUsersData","Setting","props","user","SetUser","firestore","collection","doc","auth","currentUser","uid","get","then","snapshot","exists","data","console","log","mapStateToProps","store","users","usersState","mapDispatchProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,cAAT;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,kBAEIR,QAAQ,CAAC,IAAD,CAFZ;AAAA;AAAA,MAEbS,IAFa;AAAA,MAEPC,OAFO;;AAIpBR,EAAAA,QAAQ,CAACS,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESX,QAAQ,CAACY,IAAT,GAAgBC,WAAhB,CAA4BC,GAFrC,EAGKC,GAHL,GAIKC,IAJL,CAIU,UAACC,QAAD,EAAc;AAChB,QAAIA,QAAQ,CAACC,MAAb,EAAqB;AACjBV,MAAAA,OAAO,CAACS,QAAQ,CAACE,IAAT,EAAD,CAAP;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH;AACJ,GAVL;AAYA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKD,OAAO,CAACC,GAAR,CAAYf,KAAZ,CAHL,EAIKc,OAAO,CAACC,GAAR,CAAYd,IAAZ,CAJL,CADJ;AASH;;AAED,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChCC,IAAAA,KAAK,EAAED,KAAK,CAACE,UAAN,CAAiBD;AADQ,GAAZ;AAAA,CAAxB;;AAGA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD;AAAA,SAAcxB,kBAAkB,CAAC;AAAEC,IAAAA,cAAc,EAAdA;AAAF,GAAD,EAAqBuB,QAArB,CAAhC;AAAA,CAAzB;;AAEA,eAAezB,OAAO,CAACoB,eAAD,EAAkBI,gBAAlB,CAAP,CAA2CrB,OAA3C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, Image, Button } from 'react-native';\r\n\r\nimport firebase from 'firebase';\r\nrequire('firebase/firestore')\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport { fetchUsersData } from '../../redux/actions/index'\r\n\r\nfunction Setting(props) {\r\n\r\n    const [user, SetUser] = useState(null);\r\n\r\n    firebase.firestore()\r\n        .collection(\"users\")\r\n        .doc(firebase.auth().currentUser.uid)\r\n        .get()\r\n        .then((snapshot) => {\r\n            if (snapshot.exists) {\r\n                SetUser(snapshot.data())\r\n            } else {\r\n                console.log(\"Setting user does not exist\")\r\n            }\r\n        })\r\n\r\n    return (\r\n        <View>\r\n\r\n            <Text>YAYA</Text>\r\n            {console.log(props)}\r\n            {console.log(user)}\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    users: store.usersState.users\r\n})\r\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUsersData }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Setting);"]},"metadata":{},"sourceType":"module"}