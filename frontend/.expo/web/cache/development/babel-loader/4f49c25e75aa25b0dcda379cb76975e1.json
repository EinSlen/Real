{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Valentin\\\\Desktop\\\\Developper\\\\LGBTapp\\\\Real\\\\frontend\\\\components\\\\main\\\\Feed.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\n\nfunction Feed(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      likesize = _useState4[0],\n      setLikesize = _useState4[1];\n\n  useEffect(function () {\n    if (props.usersFollowingLoaded == props.following.length && props.following.length !== 0) {\n      props.feed.sort(function (x, y) {\n        return x.creation - y.creation;\n      });\n      setPosts(props.feed);\n    }\n\n    props.users.find(function (x) {\n      return x.uid === comments[i].creator;\n    });\n    var id = props.feed.find(function (x) {\n      return x.id;\n    });\n    console.log(id);\n  }, [props.usersFollowingLoaded, props.feed]);\n\n  var onLikePress = function onLikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).set({});\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").get().then(function (snapshot) {\n      var size = snapshot.size;\n      console.log(snapshot);\n      firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"sizeLike\").doc(postId).set({\n        \"size\": size\n      });\n    });\n  };\n\n  var onDislikePress = function onDislikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).delete();\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").get().then(function (snapshot) {\n      var size = snapshot.size;\n      console.log(snapshot);\n      firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"sizeLike\").doc(postId).set({\n        \"size\": size\n      });\n    });\n  };\n\n  var onLikeSize = function onLikeSize(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"sizeLike\").doc(postId).get().then(function (snapshot) {\n      var like = snapshot.data();\n      console.log(like);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.containerGallery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.createElement(View, {\n        style: styles.containerImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }\n      }, item.user.name), React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }\n      }), onLikeSize(item.user.uid, item.id), item.currentUserLike ? React.createElement(Button, {\n        title: \"Dislike\",\n        onPress: function onPress() {\n          return onDislikePress(item.user.uid, item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }\n      }) : React.createElement(Button, {\n        title: \"Like\",\n        onPress: function onPress() {\n          return onLikePress(item.user.uid, item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 37\n        }\n      }), React.createElement(Text, {\n        onPress: function onPress() {\n          return props.navigation.navigate('Comment', {\n            postId: item.id,\n            uid: item.user.uid\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }\n      }, \"View Comments...\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  containerInfo: {\n    margin: 20\n  },\n  containerGallery: {\n    flex: 1\n  },\n  containerImage: {\n    flex: 1 / 3\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1 / 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded\n  };\n};\n\nexport default connect(mapStateToProps, null)(Feed);","map":{"version":3,"sources":["C:/Users/Valentin/Desktop/Developper/LGBTapp/Real/frontend/components/main/Feed.js"],"names":["React","useState","useEffect","firebase","require","connect","Feed","props","posts","setPosts","likesize","setLikesize","usersFollowingLoaded","following","length","feed","sort","x","y","creation","users","find","uid","comments","i","creator","id","console","log","onLikePress","userId","postId","firestore","collection","doc","auth","currentUser","set","get","then","snapshot","size","onDislikePress","delete","onLikeSize","like","data","styles","container","containerGallery","item","index","containerImage","user","name","image","uri","downloadURL","currentUserLike","navigation","navigate","StyleSheet","create","flex","containerInfo","margin","aspectRatio","mapStateToProps","store","userState","usersState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, View, Text, Image, FlatList, Button } from 'react-native'\nimport firebase from 'firebase'\nrequire('firebase/firestore')\nimport { connect } from 'react-redux'\n\nfunction Feed(props) {\n    const [posts, setPosts] = useState([]);\n    const [likesize, setLikesize] = useState(0);\n\n    useEffect(() => {\n        if (props.usersFollowingLoaded == props.following.length && props.following.length !== 0) {\n            props.feed.sort(function (x, y) {\n                return x.creation - y.creation;\n            })\n            setPosts(props.feed);\n        }\n\n        props.users.find(x => x.uid === comments[i].creator)\n\n        const id = props.feed.find(x => x.id)\n        console.log(id)\n    \n\n    }, [props.usersFollowingLoaded, props.feed])\n\n\n    const onLikePress = (userId, postId) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .set({})\n\n\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .get()\n            .then(snapshot => {\n                let size = snapshot.size\n                console.log(snapshot)\n                firebase.firestore()\n                .collection(\"posts\")\n                .doc(userId)\n                .collection(\"userPosts\")\n                .doc(postId)\n                .collection(\"sizeLike\")\n                .doc(postId)\n                .set({\n                    \"size\": size\n                })\n            })\n\n    }\n    const onDislikePress = (userId, postId) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .delete()\n\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .get()\n            .then(snapshot => {\n                let size = snapshot.size\n                console.log(snapshot)\n                firebase.firestore()\n                .collection(\"posts\")\n                .doc(userId)\n                .collection(\"userPosts\")\n                .doc(postId)\n                .collection(\"sizeLike\")\n                .doc(postId)\n                .set({\n                    \"size\": size\n                })\n            })\n    }\n\n    const onLikeSize = (userId, postId) => {\n        firebase.firestore()\n        .collection(\"posts\")\n        .doc(userId)\n        .collection(\"userPosts\")\n        .doc(postId)\n        .collection(\"sizeLike\")\n        .doc(postId)\n        .get()\n        .then(snapshot => {\n            let like = snapshot.data()\n            console.log(like)\n        })\n    }\n    return (\n        <View style={styles.container}>\n            <View style={styles.containerGallery}>\n                <FlatList\n                    numColumns={1}\n                    horizontal={false}\n                    data={posts}\n                    renderItem={({ item, index }) => (\n                        \n                        <View style={styles.containerImage}>\n                            <Text style={styles.container}>{item.user.name}</Text>\n                            <Image\n                                style={styles.image}\n                                source={{ uri: item.downloadURL }}\n                                \n                            />\n                            \n                            {onLikeSize(item.user.uid, item.id)}\n\n                            { item.currentUserLike ?\n                                (\n                                    <Button\n                                        title=\"Dislike\"\n                                        onPress={() => \n                                            onDislikePress(item.user.uid, item.id)\n                                        } />      \n                                )\n                                :\n                                (\n                                    <Button\n                                        title=\"Like\"\n                                        onPress={() => \n                                            onLikePress(item.user.uid, item.id)\n                                        } />\n                                )\n                            }\n\n                            <Text\n                                onPress={() => props.navigation.navigate('Comment', { postId: item.id, uid: item.user.uid })}>\n                                View Comments...\n                                </Text>   \n                        </View>\n\n                    )}\n\n                />\n            </View>\n        </View>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    containerInfo: {\n        margin: 20\n    },\n    containerGallery: {\n        flex: 1\n    },\n    containerImage: {\n        flex: 1 / 3\n\n    },\n    image: {\n        flex: 1,\n        aspectRatio: 1 / 1\n    }\n})\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded,\n\n\n})\nexport default connect(mapStateToProps, null)(Feed);\n"]},"metadata":{},"sourceType":"module"}