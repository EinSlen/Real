{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Valentin\\\\Desktop\\\\Developper\\\\LGBTapp\\\\Real\\\\frontend\\\\components\\\\main\\\\Feed.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\n\nfunction Feed(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      likesize = _useState4[0],\n      setLikesize = _useState4[1];\n\n  useEffect(function () {\n    if (props.usersFollowingLoaded == props.following.length && props.following.length !== 0) {\n      props.feed.sort(function (x, y) {\n        return x.creation - y.creation;\n      });\n      setPosts(props.feed);\n    }\n  }, [props.usersFollowingLoaded, props.feed]);\n\n  var onLikePress = function onLikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).set({});\n    exports.addLike = functions.firestore.document('/posts/{creatorId}/userPosts/{postId}/likes/{userId}').onCreate(function (snap, context) {\n      return db.collection(\"posts\").doc(context.params.creatorId).collection(\"userPosts\").doc(context.params.postId).update({\n        likesCount: admin.firestore.FieldValue.increment(1)\n      });\n    });\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").get().then(function (snapshot) {\n      var size = snapshot.size;\n      firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"sizeLike\").doc(postId).set({\n        \"size\": size\n      });\n    });\n  };\n\n  var onDislikePress = function onDislikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).delete();\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"likes\").get().then(function (snapshot) {\n      var size = snapshot.size;\n      firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"sizeLike\").doc(postId).set({\n        \"size\": size\n      });\n    });\n  };\n\n  var onLikeSize = function onLikeSize(userId, postId, User) {\n    firebase.firestore().collection(\"posts\").doc(userId).collection(\"userPosts\").doc(postId).collection(\"sizeLike\").doc(postId).get().then(function (snapshot) {\n      var like = snapshot.data();\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.containerGallery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: posts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.containerImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }\n      }, item.user.name), React.createElement(Text, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }, item.user.email), React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      }), onLikeSize(item.user.uid, item.id, item.user), item.currentUserLike ? React.createElement(Button, {\n        title: \"Dislike\",\n        onPress: function onPress() {\n          return onDislikePress(item.user.uid, item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 37\n        }\n      }) : React.createElement(Button, {\n        title: \"Like\",\n        onPress: function onPress() {\n          return onLikePress(item.user.uid, item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 37\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }\n      }, \"Like : \", item.size), React.createElement(Text, {\n        onPress: function onPress() {\n          return props.navigation.navigate('Comment', {\n            postId: item.id,\n            uid: item.user.uid\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }\n      }, \"View Comments...\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  containerInfo: {\n    margin: 20\n  },\n  containerGallery: {\n    flex: 1\n  },\n  containerImage: {\n    flex: 1 / 3\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1 / 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded\n  };\n};\n\nexport default connect(mapStateToProps, null)(Feed);","map":{"version":3,"sources":["C:/Users/Valentin/Desktop/Developper/LGBTapp/Real/frontend/components/main/Feed.js"],"names":["React","useState","useEffect","firebase","require","connect","Feed","props","posts","setPosts","likesize","setLikesize","usersFollowingLoaded","following","length","feed","sort","x","y","creation","onLikePress","userId","postId","firestore","collection","doc","auth","currentUser","uid","set","exports","addLike","functions","document","onCreate","snap","context","db","params","creatorId","update","likesCount","admin","FieldValue","increment","get","then","snapshot","size","onDislikePress","delete","onLikeSize","User","like","data","styles","container","containerGallery","item","containerImage","user","name","email","image","uri","downloadURL","id","currentUserLike","navigation","navigate","StyleSheet","create","flex","containerInfo","margin","aspectRatio","mapStateToProps","store","userState","usersState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, View, Text, Image, FlatList, Button } from 'react-native'\nimport firebase from 'firebase'\nrequire('firebase/firestore')\nimport { connect } from 'react-redux'\n\nfunction Feed(props) {\n    const [posts, setPosts] = useState([]);\n    const [likesize, setLikesize] = useState(0);\n\n    useEffect(() => {\n        if (props.usersFollowingLoaded == props.following.length && props.following.length !== 0) {\n            props.feed.sort(function (x, y) {\n                return x.creation - y.creation;\n            })\n            setPosts(props.feed);\n        }\n\n    }, [props.usersFollowingLoaded, props.feed])\n\n\n    const onLikePress = (userId, postId) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .set({})\n\n            exports.addLike = functions.firestore.document('/posts/{creatorId}/userPosts/{postId}/likes/{userId}')\n            .onCreate((snap, context) => {\n                return db\n                    .collection(\"posts\")\n                    .doc(context.params.creatorId)\n                    .collection(\"userPosts\")\n                    .doc(context.params.postId)\n                    .update({\n                        likesCount: admin.firestore.FieldValue.increment(1)\n                    })\n            });\n\n\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .get()\n            .then(snapshot => {\n                let size = snapshot.size\n                firebase.firestore()\n                .collection(\"posts\")\n                .doc(userId)\n                .collection(\"userPosts\")\n                .doc(postId)\n                .collection(\"sizeLike\")\n                .doc(postId)\n                .set({\n                    \"size\": size\n                })\n            })\n\n    }\n    const onDislikePress = (userId, postId) => {\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .delete()\n\n        firebase.firestore()\n            .collection(\"posts\")\n            .doc(userId)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .get()\n            .then(snapshot => {\n                let size = snapshot.size\n                firebase.firestore()\n                .collection(\"posts\")\n                .doc(userId)\n                .collection(\"userPosts\")\n                .doc(postId)\n                .collection(\"sizeLike\")\n                .doc(postId)\n                .set({\n                    \"size\": size\n                })\n            })\n    }\n\n    const onLikeSize = (userId, postId, User) => {\n        firebase.firestore()\n        .collection(\"posts\")\n        .doc(userId)\n        .collection(\"userPosts\")\n        .doc(postId)\n        .collection(\"sizeLike\")\n        .doc(postId)\n        .get()\n        .then(snapshot => {\n            let like = snapshot.data()\n\n        })\n    }\n    return (\n        <View style={styles.container}>\n            <View style={styles.containerGallery}>\n                <FlatList\n                    numColumns={1}\n                    horizontal={false}\n                    data={posts}\n                    renderItem={({ item }) => (\n                        <View style={styles.containerImage}>\n                            <Text style={styles.container}>{item.user.name}</Text>\n                            <Text style={styles.container}>{item.user.email}</Text>\n                            <Image\n                                style={styles.image}\n                                source={{ uri: item.downloadURL }}\n                                \n                            />\n                            \n                            {onLikeSize(item.user.uid, item.id, item.user)}\n\n                            { item.currentUserLike ?\n                                (\n                                    <Button\n                                        title=\"Dislike\"\n                                        onPress={() => \n                                            onDislikePress(item.user.uid, item.id)\n                                        } />      \n                                )\n                                :\n                                (\n                                    <Button\n                                        title=\"Like\"\n                                        onPress={() => \n                                            onLikePress(item.user.uid, item.id)\n                                        } />\n                                    \n                                )\n                            }\n\n                                <Text>Like : {item.size}</Text>\n\n                            <Text\n                                onPress={() => props.navigation.navigate('Comment', { postId: item.id, uid: item.user.uid })}>\n                                View Comments...\n                                </Text>   \n                        </View>\n\n                    )}\n\n                />\n            </View>\n        </View>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    containerInfo: {\n        margin: 20\n    },\n    containerGallery: {\n        flex: 1\n    },\n    containerImage: {\n        flex: 1 / 3\n\n    },\n    image: {\n        flex: 1,\n        aspectRatio: 1 / 1\n    }\n})\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded,\n\n\n})\nexport default connect(mapStateToProps, null)(Feed);\n"]},"metadata":{},"sourceType":"module"}