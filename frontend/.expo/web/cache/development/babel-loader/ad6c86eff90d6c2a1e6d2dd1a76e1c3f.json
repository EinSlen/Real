{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Valentin\\\\Desktop\\\\Developper\\\\LGBTapp\\\\Real\\\\frontend\\\\components\\\\main\\\\Setting.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUsersData } from \"../../redux/actions/index\";\n\nfunction Setting(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      SetUser = _useState2[1];\n\n  useEffect(function () {\n    firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).get().then(function (snapshot) {\n      if (snapshot.exists) {\n        SetUser(snapshot.data());\n      } else {\n        console.log(\"Setting user does not exist\");\n      }\n    });\n  }, [props]);\n\n  if (user === null) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, user.picture ? React.createElement(Image, {\n    source: {\n      uri: user.picture\n    },\n    style: {\n      width: 48,\n      height: 48,\n      borderRadius: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../../assets/friend.png\"),\n    style: {\n      width: 48,\n      height: 48,\n      borderRadius: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, user.name), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, user.email), console.log(props.users), React.createElement(FlatList, {\n    numColumns: 3,\n    horizontal: false,\n    data: props.users,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, item));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    users: store.usersState.users\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUsersData: fetchUsersData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Setting);","map":{"version":3,"sources":["C:/Users/Valentin/Desktop/Developper/LGBTapp/Real/frontend/components/main/Setting.js"],"names":["React","useState","useEffect","firebase","require","connect","bindActionCreators","fetchUsersData","Setting","props","user","SetUser","firestore","collection","doc","auth","currentUser","uid","get","then","snapshot","exists","data","console","log","picture","uri","width","height","borderRadius","name","email","users","item","mapStateToProps","store","usersState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, Image, Button, FlatList } from 'react-native';\r\n\r\nimport firebase from 'firebase';\r\nrequire('firebase/firestore')\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport { fetchUsersData } from '../../redux/actions/index'\r\n\r\nfunction Setting(props) {\r\n\r\n    const [user, SetUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.firestore()\r\n        .collection(\"users\")\r\n        .doc(firebase.auth().currentUser.uid)\r\n        .get()\r\n        .then((snapshot) => {\r\n            if (snapshot.exists) {\r\n                SetUser(snapshot.data())\r\n            } else {\r\n                console.log(\"Setting user does not exist\")\r\n            }\r\n        })\r\n    }, [props])\r\n\r\n    if (user === null) {\r\n        return <View />\r\n    }\r\n\r\n    return (\r\n        <View>\r\n             {user.picture ? (\r\n                    <Image\r\n                        source={{uri: user.picture}}\r\n                        style={{width: 48, height: 48, borderRadius: 50}}\r\n                    />) : (\r\n                    <Image\r\n                        source={require('../../assets/friend.png')}\r\n                        style={{width: 48, height: 48, borderRadius: 50}}\r\n                    />\r\n                )}  \r\n            <Text>{user.name}</Text>\r\n            <Text>{user.email}</Text>\r\n            {console.log(props.users)}\r\n            <FlatList\r\n                  numColumns={3}\r\n                  horizontal={false}\r\n                  data={props.users}\r\n                  renderItem={({ item }) => {\r\n                    <View>\r\n                        <Text>{item}</Text>\r\n                    </View>\r\n                  }}\r\n            />\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    users: store.usersState.users\r\n})\r\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUsersData }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Setting);"]},"metadata":{},"sourceType":"module"}