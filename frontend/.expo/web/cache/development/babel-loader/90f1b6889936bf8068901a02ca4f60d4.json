{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Valentin\\\\Desktop\\\\Developper\\\\LGBTapp\\\\Real\\\\frontend\\\\components\\\\main\\\\Setting.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUsersData } from \"../../redux/actions/index\";\nimport * as ImagePicker from 'expo-image-picker';\n\nfunction Setting(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      SetUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nameValue = _useState6[0],\n      setNameValue = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageComplet = _useState8[0],\n      setImageComplet = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      bio = _useState10[0],\n      setBio = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      errorTask = _useState14[0],\n      setErrorTask = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      bioError = _useState16[0],\n      setBioError = _useState16[1];\n\n  useEffect(function () {\n    firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).get().then(function (snapshot) {\n      if (snapshot.exists) {\n        SetUser(snapshot.data());\n      } else {\n        console.log(\"Setting user does not exist\");\n      }\n    });\n  }, [props]);\n\n  var ChangeProfile = function ChangeProfile() {\n    var result, uri, childPath, response, blob, task, taskProgress, taskCompleted, taskError;\n    return _regeneratorRuntime.async(function ChangeProfile$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (result.cancelled) {\n              _context.next = 20;\n              break;\n            }\n\n            setImage(result.uri);\n            uri = image;\n            childPath = \"picture/\" + firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n            console.log(childPath);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 11:\n            response = _context.sent;\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 14:\n            blob = _context.sent;\n            task = firebase.storage().ref().child(childPath).put(blob);\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted() {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                savePostData(snapshot);\n                setImageComplet(snapshot);\n                console.log(snapshot);\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n              setError(snapshot);\n              setErrorTask(null);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var savePostData = function savePostData(downloadURL) {\n    firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid).set({\n      name: user.name,\n      email: user.email,\n      picture: downloadURL,\n      bio: user.bio\n    });\n  };\n\n  var onLogout = function onLogout() {\n    firebase.auth().signOut();\n  };\n\n  var Submit = function Submit() {\n    if (nameValue.length != 0) {\n      if (nameValue.length < 5 || nameValue.length > 10) {\n        setError(\"Your name is too small or big.\");\n        setErrorTask(null);\n      }\n\n      if (nameValue.length > 5 && nameValue.length < 10) setErrorTask(true);\n    }\n\n    if (bio.length > 100) {\n      setError(\"Your biography is too big.\");\n      setErrorTask(null);\n      setBioError(null);\n    } else {\n      setBioError(true);\n    }\n\n    console.log(errorTask);\n\n    if ((bio.length != 0 || nameValue.length != 0) && errorTask && bioError) {\n      firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n        name: nameValue,\n        email: user.email,\n        picture: user.picture,\n        bio: bio\n      }).then(function () {\n        props.navigation.navigate(\"Profile\", {\n          uid: firebase.auth().currentUser.uid\n        });\n      });\n    }\n  };\n\n  if (user === null) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Profile\", {\n        uid: firebase.auth().currentUser.uid\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/fleche.jpg\"),\n    style: {\n      width: 48,\n      height: 48,\n      marginTop: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Profile \", user.name), React.createElement(TouchableOpacity, {\n    style: styles.logoutButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Logout\",\n    onPress: function onPress() {\n      return onLogout();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, user.picture ? React.createElement(Image, {\n    source: {\n      uri: user.picture\n    },\n    style: {\n      width: 48,\n      height: 48,\n      borderRadius: 10,\n      position: 'absolute',\n      margin: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../../assets/friend.png\"),\n    style: {\n      width: 48,\n      height: 48,\n      borderRadius: 10,\n      position: 'absolute',\n      margin: 35\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, imageComplet), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Change profile picture\",\n    onPress: function onPress() {\n      return ChangeProfile();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    style: {\n      fontSize: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Name: \"), React.createElement(TextInput, {\n    placeholder: user.name,\n    style: styles.textInput,\n    maxLength: 15,\n    onChangeText: function onChangeText(nametext) {\n      return setNameValue(nametext);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, \"Your Email : \"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, user.email), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, \"Bio : \"), React.createElement(TextInput, {\n    style: styles.textInputBio,\n    textAlignVertical: \"top\",\n    placeholder: \"Place a bio\",\n    onChangeText: function onChangeText(biotext) {\n      return setBio(biotext);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }), errorTask ? null : React.createElement(Text, {\n    style: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 34\n    }\n  }, error), errorTask ? React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 28\n    }\n  }, error) : null, React.createElement(TouchableOpacity, {\n    style: {\n      marginTop: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Submit\",\n    onPress: function onPress() {\n      return Submit();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  header: {\n    flex: 1,\n    margin: 5\n  },\n  container: {\n    flex: 1,\n    padding: 25,\n    marginTop: 25\n  },\n  textInput: {\n    fontSize: 16,\n    borderColor: 'black',\n    borderWidth: 1,\n    borderRadius: 10,\n    width: 150,\n    marginTop: 10\n  },\n  textInputBio: {\n    fontSize: 16,\n    borderColor: 'black',\n    borderWidth: 1,\n    borderRadius: 10,\n    height: 150,\n    marginTop: 10\n  },\n  textInputEmail: {\n    fontSize: 16,\n    borderColor: 'black',\n    borderWidth: 1,\n    borderRadius: 10,\n    width: 250,\n    height: 50,\n    marginTop: 10\n  },\n  button: {\n    height: 60,\n    alignItems: 'flex-end'\n  },\n  headerText: {\n    fontSize: 20,\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 35,\n    right: '50%'\n  },\n  text: {\n    marginTop: 25,\n    fontSize: 16\n  },\n  error: {\n    fontSize: 20,\n    color: 'red',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 20\n  },\n  logoutButton: {\n    width: 120,\n    fontSize: 20,\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 35,\n    right: 0\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    users: store.usersState.users\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUsersData: fetchUsersData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Setting);","map":{"version":3,"sources":["C:/Users/Valentin/Desktop/Developper/LGBTapp/Real/frontend/components/main/Setting.js"],"names":["React","useState","useEffect","firebase","require","connect","bindActionCreators","fetchUsersData","ImagePicker","Setting","props","user","SetUser","image","setImage","nameValue","setNameValue","imageComplet","setImageComplet","bio","setBio","error","setError","errorTask","setErrorTask","bioError","setBioError","firestore","collection","doc","auth","currentUser","uid","get","then","snapshot","exists","data","console","log","ChangeProfile","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","cancelled","uri","childPath","Math","random","toString","fetch","response","blob","task","storage","ref","child","put","taskProgress","bytesTransferred","taskCompleted","getDownloadURL","savePostData","taskError","on","downloadURL","set","name","email","picture","onLogout","signOut","Submit","length","navigation","navigate","styles","header","width","height","marginTop","headerText","logoutButton","container","borderRadius","position","margin","button","fontSize","textInput","nametext","text","textInputBio","biotext","StyleSheet","create","flex","padding","borderColor","borderWidth","textInputEmail","alignItems","justifyContent","right","color","paddingTop","mapStateToProps","store","users","usersState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, View, Text, TextInput, Image, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\n\r\nimport firebase from 'firebase';\r\nrequire('firebase/firestore')\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport { fetchUsersData } from '../../redux/actions/index'\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nfunction Setting(props) {\r\n\r\n    const [user, SetUser] = useState(null);\r\n    const [image, setImage] = useState(null);\r\n    const [nameValue, setNameValue] = useState(\"\");\r\n    const [imageComplet, setImageComplet] = useState(null);\r\n    const [bio, setBio] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [errorTask, setErrorTask] = useState(null);\r\n    const [bioError, setBioError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        firebase.firestore()\r\n        .collection(\"users\")\r\n        .doc(firebase.auth().currentUser.uid)\r\n        .get()\r\n        .then((snapshot) => {\r\n            if (snapshot.exists) {\r\n                SetUser(snapshot.data())\r\n            } else {\r\n                console.log(\"Setting user does not exist\")\r\n            }\r\n        })\r\n    }, [props])\r\n\r\n    const ChangeProfile = async () => {\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n            allowsEditing: true,\r\n            aspect: [1, 1],\r\n            quality: 1,\r\n        });\r\n        console.log(result);\r\n      \r\n        if (!result.cancelled) {\r\n            setImage(result.uri);\r\n            const uri = image;\r\n            const childPath = `picture/${firebase.auth().currentUser.uid}/${Math.random().toString(36)}`;\r\n            console.log(childPath)\r\n\r\n            const response = await fetch(uri);\r\n            const blob = await response.blob();\r\n\r\n            const task = firebase\r\n                .storage()\r\n                .ref()\r\n                .child(childPath)\r\n                .put(blob);\r\n\r\n            const taskProgress = snapshot => {\r\n                console.log(`transferred: ${snapshot.bytesTransferred}`)\r\n            }\r\n\r\n            const taskCompleted = () => {\r\n                task.snapshot.ref.getDownloadURL().then((snapshot) => {\r\n                    savePostData(snapshot);\r\n                    setImageComplet(snapshot);\r\n                    console.log(snapshot)\r\n                })\r\n            }\r\n\r\n            const taskError = snapshot => {\r\n                console.log(snapshot)\r\n                setError(snapshot)\r\n                setErrorTask(null);\r\n            }\r\n\r\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\r\n        }\r\n    }\r\n\r\n    const savePostData = (downloadURL) => {\r\n\r\n        firebase.firestore()\r\n            .collection('users')\r\n            .doc(firebase.auth().currentUser.uid)\r\n            .set({\r\n                name: user.name,\r\n                email: user.email,\r\n                picture: downloadURL,\r\n                bio: user.bio\r\n            })\r\n    }\r\n\r\n    const onLogout = () => {\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    const Submit = () => {\r\n\r\n        if(nameValue.length != 0) {\r\n            if(nameValue.length < 5 || nameValue.length > 10) {\r\n                setError(\"Your name is too small or big.\")\r\n                setErrorTask(null);\r\n            } \r\n            \r\n            if(nameValue.length > 5 && nameValue.length < 10) setErrorTask(true)\r\n        }\r\n        if(bio.length > 100) {\r\n            setError(\"Your biography is too big.\")\r\n            setErrorTask(null);\r\n            setBioError(null)\r\n        } else {\r\n            setBioError(true)\r\n        }\r\n\r\n        console.log(errorTask)\r\n\r\n        if((bio.length != 0 || nameValue.length != 0) && errorTask && bioError) {\r\n                firebase.firestore()\r\n                .collection(\"users\")\r\n                .doc(firebase.auth().currentUser.uid)\r\n                .set({\r\n                    name: nameValue,\r\n                    email: user.email,\r\n                    picture: user.picture,\r\n                    bio: bio\r\n                }).then(() => {\r\n                    props.navigation.navigate(\"Profile\", {uid: firebase.auth().currentUser.uid})\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    if (user === null) {\r\n        return <View />\r\n    }\r\n\r\n    return (\r\n        <View style={styles.header}>\r\n            <TouchableOpacity\r\n                onPress={() => props.navigation.navigate(\"Profile\", {uid: firebase.auth().currentUser.uid})}\r\n            >\r\n                <Image\r\n                    source={require('../../assets/fleche.jpg')}\r\n                    style={{width: 48, height: 48, marginTop: 25}}\r\n                />\r\n            </TouchableOpacity>\r\n            <Text style={styles.headerText}>Profile {user.name}</Text>\r\n            <TouchableOpacity style={styles.logoutButton}>\r\n                <Button\r\n                    title=\"Logout\"\r\n                    onPress={() => onLogout()}\r\n                />\r\n            </TouchableOpacity>\r\n            <View style={styles.container}>\r\n             {user.picture ? (\r\n                    <Image\r\n                        source={{uri: user.picture}}\r\n                        style={{width: 48, height: 48, borderRadius: 10, position: 'absolute', margin: 35}}\r\n                    />) : (\r\n                    <Image\r\n                        source={require('../../assets/friend.png')}\r\n                        style={{width: 48, height: 48, borderRadius: 10, position: 'absolute', margin: 35}}\r\n                    />\r\n                )}\r\n            <Text>{imageComplet}</Text>\r\n            <TouchableOpacity style={styles.button}>\r\n                <Button\r\n                    title=\"Change profile picture\"\r\n                    onPress={() => ChangeProfile()}\r\n                />\r\n            </TouchableOpacity>\r\n            <Text style={{fontSize: 16}}>Name: </Text>\r\n            <TextInput\r\n                placeholder={user.name}\r\n                style={styles.textInput}\r\n                maxLength={15}\r\n                onChangeText={(nametext) => setNameValue(nametext)}\r\n            />\r\n            \r\n            <Text style={styles.text}>Your Email : </Text>\r\n            <Text>{user.email}</Text>\r\n            <Text style={styles.text}>Bio : </Text>\r\n            <TextInput \r\n                style={styles.textInputBio}\r\n                textAlignVertical='top'\r\n                placeholder='Place a bio'\r\n                onChangeText={(biotext) => setBio(biotext)}\r\n            />\r\n\r\n            {errorTask ? null : (<Text style={styles.error}>{error}</Text>)}\r\n            {errorTask ?  (<Text>{error}</Text>) : null}\r\n\r\n            \r\n            <TouchableOpacity style={{ marginTop: 50}}>\r\n                <Button\r\n                    title='Submit'\r\n                    onPress={() => Submit()}\r\n                />\r\n            </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        flex: 1,\r\n        margin: 5\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        padding: 25,\r\n        marginTop: 25\r\n    },\r\n    textInput: {\r\n        fontSize: 16,\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        width: 150,\r\n        marginTop: 10\r\n    },\r\n    textInputBio: {\r\n        fontSize: 16,\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        height: 150,\r\n        marginTop: 10\r\n\r\n    },\r\n    textInputEmail: {\r\n        fontSize: 16,\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        width: 250,\r\n        height: 50,\r\n        marginTop: 10,\r\n    },\r\n    button: {\r\n        height: 60, alignItems: 'flex-end'\r\n    },\r\n    headerText: {\r\n        fontSize: 20,\r\n        position: 'absolute',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 35,\r\n        right: '50%', \r\n    },\r\n    text: {\r\n        marginTop: 25,\r\n        fontSize: 16\r\n    },\r\n    error: {\r\n        fontSize: 20,\r\n        color: 'red',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingTop: 20\r\n    },\r\n    logoutButton: {\r\n        width: 120, \r\n        fontSize: 20,\r\n        position: 'absolute',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 35,\r\n        right: 0\r\n    }\r\n})\r\n\r\nconst mapStateToProps = (store) => ({\r\n    users: store.usersState.users\r\n})\r\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUsersData }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Setting);"]},"metadata":{},"sourceType":"module"}