{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Valentin\\\\Desktop\\\\Developper\\\\LGBTapp\\\\Real\\\\frontend\\\\components\\\\Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from \"../redux/actions/index\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nimport SearchScreen from \"./main/Search\";\nimport MessageScreen from \"./main/Message\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.clearData();\n      this.props.fetchUser();\n      this.props.fetchUserPosts();\n      this.props.fetchUserFollowing();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Platform.OS === 'web') {\n        return React.createElement(Tab.Navigator, {\n          initialRouteName: \"Feed\",\n          labeled: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }\n        }, React.createElement(Tab.Screen, {\n          name: \"Feed\",\n          component: FeedScreen,\n          options: {\n            tabBarIcon: function tabBarIcon(_ref) {\n              var color = _ref.color,\n                  size = _ref.size;\n              return React.createElement(MaterialCommunityIcons, {\n                name: \"home\",\n                color: color,\n                size: 26,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 33\n                }\n              });\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }\n        }), React.createElement(Tab.Screen, {\n          name: \"Search\",\n          component: SearchScreen,\n          navigation: this.props.navigation,\n          options: {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var color = _ref2.color,\n                  size = _ref2.size;\n              return React.createElement(MaterialCommunityIcons, {\n                name: \"magnify\",\n                color: color,\n                size: 26,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 33\n                }\n              });\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }\n        }), React.createElement(Tab.Screen, {\n          name: \"Message\",\n          component: MessageScreen,\n          listeners: function listeners(_ref3) {\n            var navigation = _ref3.navigation;\n            return {\n              tabPress: function tabPress(event) {\n                event.preventDefault();\n                navigation.navigate(\"Message\", {\n                  uid: firebase.auth().currentUser.uid\n                });\n              }\n            };\n          },\n          options: {\n            tabBarIcon: function tabBarIcon(_ref4) {\n              var color = _ref4.color,\n                  size = _ref4.size;\n              return React.createElement(MaterialCommunityIcons, {\n                name: \"message\",\n                color: color,\n                size: 26,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 33\n                }\n              });\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 22\n          }\n        }), React.createElement(Tab.Screen, {\n          name: \"Profile\",\n          component: ProfileScreen,\n          listeners: function listeners(_ref5) {\n            var navigation = _ref5.navigation;\n            return {\n              tabPress: function tabPress(event) {\n                event.preventDefault();\n                navigation.navigate(\"Profile\", {\n                  uid: firebase.auth().currentUser.uid\n                });\n              }\n            };\n          },\n          options: {\n            tabBarIcon: function tabBarIcon(_ref6) {\n              var color = _ref6.color,\n                  size = _ref6.size;\n              return React.createElement(MaterialCommunityIcons, {\n                name: \"account-circle\",\n                color: color,\n                size: 26,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 33\n                }\n              });\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Feed\",\n        labeled: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref7) {\n            var color = _ref7.color,\n                size = _ref7.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Search\",\n        component: SearchScreen,\n        navigation: this.props.navigation,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref8) {\n            var color = _ref8.color,\n                size = _ref8.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"magnify\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"AddContainer\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref9) {\n          var navigation = _ref9.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref10) {\n            var color = _ref10.color,\n                size = _ref10.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Message\",\n        component: MessageScreen,\n        listeners: function listeners(_ref11) {\n          var navigation = _ref11.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Message\", {\n                uid: firebase.auth().currentUser.uid\n              });\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref12) {\n            var color = _ref12.color,\n                size = _ref12.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"message\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 18\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        listeners: function listeners(_ref13) {\n          var navigation = _ref13.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Profile\", {\n                uid: firebase.auth().currentUser.uid\n              });\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref14) {\n            var color = _ref14.color,\n                size = _ref14.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchUserPosts: fetchUserPosts,\n    fetchUserFollowing: fetchUserFollowing,\n    clearData: clearData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["C:/Users/Valentin/Desktop/Developper/LGBTapp/Real/frontend/components/Main.js"],"names":["React","Component","createMaterialBottomTabNavigator","MaterialCommunityIcons","firebase","connect","bindActionCreators","fetchUser","fetchUserPosts","fetchUserFollowing","clearData","FeedScreen","ProfileScreen","SearchScreen","MessageScreen","Tab","EmptyScreen","Main","props","Platform","OS","tabBarIcon","color","size","navigation","tabPress","event","preventDefault","navigate","uid","auth","currentUser","mapStateToProps","store","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport firebase from 'firebase'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from '../redux/actions/index'\nimport { Platform } from 'react-native';\n\nimport FeedScreen from './main/Feed'\nimport ProfileScreen from './main/Profile'\nimport SearchScreen from './main/Search'\nimport MessageScreen from './main/Message'\n\nconst Tab = createMaterialBottomTabNavigator();\n\nconst EmptyScreen = () => {\n    return (null)\n}\n\nexport class Main extends Component {\n    componentDidMount() {\n        this.props.clearData();\n        this.props.fetchUser();\n        this.props.fetchUserPosts();\n        this.props.fetchUserFollowing();\n    }\n    render() {\n\n        if (Platform.OS === 'web') {\n            return (\n                <Tab.Navigator initialRouteName=\"Feed\" labeled={false}>\n                    <Tab.Screen name=\"Feed\" component={FeedScreen}\n                        options={{\n                            tabBarIcon: ({ color, size }) => (\n                                <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n                            ),\n                        }} />\n                    <Tab.Screen name=\"Search\" component={SearchScreen} navigation={this.props.navigation}\n                        options={{\n                            tabBarIcon: ({ color, size }) => (\n                                <MaterialCommunityIcons name=\"magnify\" color={color} size={26} />\n                            ),\n                        }} />\n                     <Tab.Screen name=\"Message\" component={MessageScreen} \n                    listeners={({ navigation }) => ({\n                        tabPress: event => {\n                            event.preventDefault();\n                            navigation.navigate(\"Message\", {uid: firebase.auth().currentUser.uid})\n                        }})}\n                        options={{\n                            tabBarIcon: ({ color, size }) => (\n                                <MaterialCommunityIcons name=\"message\" color={color} size={26} />\n                            ),\n                        }} />\n                    <Tab.Screen name=\"Profile\" component={ProfileScreen} \n                    listeners={({ navigation }) => ({\n                        tabPress: event => {\n                            event.preventDefault();\n                            navigation.navigate(\"Profile\", {uid: firebase.auth().currentUser.uid})\n                        }})}\n                        options={{\n                            tabBarIcon: ({ color, size }) => (\n                                <MaterialCommunityIcons name=\"account-circle\" color={color} size={26} />\n                            ),\n                        }} />\n                </Tab.Navigator>\n            )\n        }\n        return (\n            <Tab.Navigator initialRouteName=\"Feed\" labeled={false}>\n                <Tab.Screen name=\"Feed\" component={FeedScreen}\n                    options={{\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons name=\"home\" color={color} size={26} />\n                        ),\n                    }} />\n                <Tab.Screen name=\"Search\" component={SearchScreen} navigation={this.props.navigation}\n                    options={{\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons name=\"magnify\" color={color} size={26} />\n                        ),\n                    }} />\n                <Tab.Screen name=\"AddContainer\" component={EmptyScreen}\n                    listeners={({ navigation }) => ({\n                        tabPress: event => {\n                            event.preventDefault();\n                            navigation.navigate(\"Add\")\n                        }\n                    })}\n                    options={{\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons name=\"plus-box\" color={color} size={26} />\n                        ),\n                    }} />\n                 <Tab.Screen name=\"Message\" component={MessageScreen} \n                listeners={({ navigation }) => ({\n                    tabPress: event => {\n                        event.preventDefault();\n                        navigation.navigate(\"Message\", {uid: firebase.auth().currentUser.uid})\n                    }})}\n                    options={{\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons name=\"message\" color={color} size={26} />\n                        ),\n                    }} />\n                <Tab.Screen name=\"Profile\" component={ProfileScreen} \n                listeners={({ navigation }) => ({\n                    tabPress: event => {\n                        event.preventDefault();\n                        navigation.navigate(\"Profile\", {uid: firebase.auth().currentUser.uid})\n                    }})}\n                    options={{\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons name=\"account-circle\" color={color} size={26} />\n                        ),\n                    }} />\n            </Tab.Navigator>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUser, fetchUserPosts, fetchUserFollowing, clearData }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);\n"]},"metadata":{},"sourceType":"module"}