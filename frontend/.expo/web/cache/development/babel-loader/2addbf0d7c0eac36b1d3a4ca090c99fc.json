{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Valentin\\\\Desktop\\\\Developper\\\\LGBTapp\\\\Real\\\\frontend\\\\components\\\\main\\\\Profile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\nimport * as ImagePicker from 'expo-image-picker';\n\nfunction Profile(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userPosts = _useState2[0],\n      setUserPosts = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      following = _useState6[0],\n      setFollowing = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      follower = _useState8[0],\n      setFollower = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      asfollower = _useState10[0],\n      setasFollower = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      postSize = _useState12[0],\n      setPostSize = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      image = _useState14[0],\n      setImage = _useState14[1];\n\n  useEffect(function () {\n    var currentUser = props.currentUser,\n        posts = props.posts;\n    console.log(props.currentUser.picture);\n\n    if (props.route.params.uid === firebase.auth().currentUser.uid) {\n      setUser(currentUser);\n      setUserPosts(posts);\n      firebase.firestore().collection(\"following\").doc(firebase.auth().currentUser.uid).collection(\"userFollowing\").get().then(function (snapshot) {\n        setFollower(snapshot.size);\n      });\n      firebase.firestore().collection(\"follower\").doc(props.route.params.uid).collection(\"asFollower\").get().then(function (snapshot) {\n        setasFollower(snapshot.size);\n      });\n      posts ? setPostSize(posts.length) : null;\n    } else {\n      firebase.firestore().collection(\"users\").doc(props.route.params.uid).get().then(function (snapshot) {\n        if (snapshot.exists) {\n          setUser(snapshot.data());\n        } else {\n          console.log('does not exist');\n        }\n      });\n      firebase.firestore().collection(\"posts\").doc(props.route.params.uid).collection(\"userPosts\").orderBy(\"creation\", \"asc\").get().then(function (snapshot) {\n        var posts = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        setUserPosts(posts);\n        posts ? setPostSize(posts.length) : null;\n      });\n      firebase.firestore().collection(\"following\").doc(props.route.params.uid).collection(\"userFollowing\").get().then(function (snapshot) {\n        setFollower(snapshot.size);\n      });\n      firebase.firestore().collection(\"follower\").doc(props.route.params.uid).collection(\"asFollower\").get().then(function (snapshot) {\n        setasFollower(snapshot.size);\n      });\n    }\n\n    if (props.following.indexOf(props.route.params.uid) > -1) {\n      setFollowing(true);\n    } else {\n      setFollowing(false);\n    }\n  }, [props.route.params.uid, props.following]);\n\n  var onFollow = function onFollow() {\n    firebase.firestore().collection(\"following\").doc(firebase.auth().currentUser.uid).collection(\"userFollowing\").doc(props.route.params.uid).set({});\n    firebase.firestore().collection(\"follower\").doc(props.route.params.uid).collection(\"asFollower\").doc(firebase.auth().currentUser.uid).set({});\n  };\n\n  var onUnfollow = function onUnfollow() {\n    firebase.firestore().collection(\"following\").doc(firebase.auth().currentUser.uid).collection(\"userFollowing\").doc(props.route.params.uid).delete();\n    firebase.firestore().collection(\"follower\").doc(props.route.params.uid).collection(\"asFollower\").doc(firebase.auth().currentUser.uid).delete();\n  };\n\n  var onLogout = function onLogout() {\n    firebase.auth().signOut();\n  };\n\n  var trash = function trash(downloadURL) {\n    firebase.firestore().collection('posts').doc(firebase.auth().currentUser.uid).collection('userPosts').doc(downloadURL).delete();\n    console.log(\"delete : \" + downloadURL);\n  };\n\n  var ChangeProfile = function ChangeProfile() {\n    var result, uri, childPath, response, blob, task, taskProgress, taskCompleted, taskError;\n    return _regeneratorRuntime.async(function ChangeProfile$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (result.cancelled) {\n              _context.next = 20;\n              break;\n            }\n\n            setImage(result.uri);\n            uri = image;\n            childPath = \"picture/\" + firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n            console.log(childPath);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 11:\n            response = _context.sent;\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 14:\n            blob = _context.sent;\n            task = firebase.storage().ref().child(childPath).put(blob);\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted() {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                savePostData(snapshot);\n                console.log(snapshot);\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var savePostData = function savePostData(downloadURL) {\n    firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid).set({\n      name: user.name,\n      email: user.email,\n      picture: downloadURL\n    });\n  };\n\n  if (user === null) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.containerInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, console.log(user), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, user.name), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, user.email), React.createElement(TouchableHighlight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: user.picture\n    },\n    style: styles.picture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  })), user.picture ? React.createElement(Image, {\n    source: {\n      uri: user.picture\n    },\n    style: styles.picture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../../assets/favicon.png\"),\n    style: styles.picture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }), props.route.params.uid !== firebase.auth().currentUser.uid ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, following ? React.createElement(Button, {\n    title: \"Following\",\n    onPress: function onPress() {\n      return onUnfollow();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }) : React.createElement(Button, {\n    title: \"Follow\",\n    onPress: function onPress() {\n      return onFollow();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  })) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    title: \"Change profile picture\",\n    onPress: function onPress() {\n      return ChangeProfile();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }), React.createElement(Button, {\n    title: \"Logout\",\n    onPress: function onPress() {\n      return onLogout();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  })), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, \"Following : \", follower), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, \"Follower : \", asfollower), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, \"Posts: \", postSize), React.createElement(Image, {\n    source: {\n      uri: user.picture\n    },\n    style: styles.picture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.containerGallery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 3,\n    horizontal: false,\n    data: userPosts,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.containerImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 29\n        }\n      }), React.createElement(Image, {\n        source: require(\"../../assets/croix.png\"),\n        style: {\n          flex: 1,\n          width: 64,\n          height: 64,\n          margin: 2,\n          alignItems: 'center',\n          alignContent: 'center'\n        },\n        onPress: function onPress() {\n          return trash(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 29\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 25\n  },\n  containerInfo: {\n    margin: 20\n  },\n  containerGallery: {\n    flex: 1\n  },\n  containerImage: {\n    flex: 1 / 3\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1 / 1\n  },\n  picture: {\n    flex: 1,\n    width: 48,\n    height: 48,\n    borderRadius: 50\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    posts: store.userState.posts,\n    following: store.userState.following\n  };\n};\n\nexport default connect(mapStateToProps, null)(Profile);","map":{"version":3,"sources":["C:/Users/Valentin/Desktop/Developper/LGBTapp/Real/frontend/components/main/Profile.js"],"names":["React","useState","useEffect","firebase","require","connect","ImagePicker","Profile","props","userPosts","setUserPosts","user","setUser","following","setFollowing","follower","setFollower","asfollower","setasFollower","postSize","setPostSize","image","setImage","currentUser","posts","console","log","picture","route","params","uid","auth","firestore","collection","doc","get","then","snapshot","size","length","exists","data","orderBy","docs","map","id","indexOf","onFollow","set","onUnfollow","delete","onLogout","signOut","trash","downloadURL","ChangeProfile","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","result","cancelled","uri","childPath","Math","random","toString","fetch","response","blob","task","storage","ref","child","put","taskProgress","bytesTransferred","taskCompleted","getDownloadURL","savePostData","taskError","on","name","email","styles","container","containerInfo","containerGallery","item","containerImage","flex","width","height","margin","alignItems","alignContent","StyleSheet","create","marginTop","aspectRatio","borderRadius","mapStateToProps","store","userState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, View, Text, Image, FlatList, Button, TouchableHighlight } from 'react-native'\n\nimport firebase from 'firebase'\nrequire('firebase/firestore')\nimport { connect } from 'react-redux'\nimport * as ImagePicker from 'expo-image-picker';\n\n\nfunction Profile(props) {\n    const [userPosts, setUserPosts] = useState([]);\n    const [user, setUser] = useState(null);\n    const [following, setFollowing] = useState(false);\n    const [follower, setFollower] = useState(0);\n    const [asfollower, setasFollower] = useState(0);\n    const [postSize, setPostSize] = useState(0);\n    const [image, setImage] = useState(null)\n\n    useEffect(() => {\n        const { currentUser, posts } = props;\n\n        console.log(props.currentUser.picture)\n\n        if (props.route.params.uid === firebase.auth().currentUser.uid) {\n            setUser(currentUser)\n            setUserPosts(posts)\n            firebase.firestore().collection(\"following\").doc(firebase.auth().currentUser.uid).collection(\"userFollowing\").get()\n            .then(snapshot => {\n                setFollower(snapshot.size);\n            })\n            firebase.firestore().collection(\"follower\").doc(props.route.params.uid).collection(\"asFollower\").get()\n            .then(snapshot => {\n                setasFollower(snapshot.size);\n            })\n            posts ? setPostSize(posts.length) : null\n        }\n        else {\n            firebase.firestore()\n                .collection(\"users\")\n                .doc(props.route.params.uid)\n                .get()\n                .then((snapshot) => {\n                    if (snapshot.exists) {\n                        setUser(snapshot.data());\n                    }\n                    else {\n                        console.log('does not exist')\n                    }\n                })\n            firebase.firestore()\n                .collection(\"posts\")\n                .doc(props.route.params.uid)\n                .collection(\"userPosts\")\n                .orderBy(\"creation\", \"asc\")\n                .get()\n                .then((snapshot) => {\n                    let posts = snapshot.docs.map(doc => {\n                        const data = doc.data();\n                        const id = doc.id;\n                        return { id, ...data }\n                    })\n                    setUserPosts(posts)\n                    posts ? setPostSize(posts.length) : null \n                })\n\n                firebase.firestore().collection(\"following\").doc(props.route.params.uid).collection(\"userFollowing\").get()\n                .then(snapshot => {\n                    setFollower(snapshot.size);\n                })\n                firebase.firestore().collection(\"follower\").doc(props.route.params.uid).collection(\"asFollower\").get()\n                .then(snapshot => {\n                    setasFollower(snapshot.size);\n                })\n        }\n\n        if (props.following.indexOf(props.route.params.uid) > -1) {\n            setFollowing(true);\n        } else {\n            setFollowing(false);\n        }\n\n\n    }, [props.route.params.uid, props.following])\n\n    const onFollow = () => {\n        firebase.firestore()\n            .collection(\"following\")\n            .doc(firebase.auth().currentUser.uid)\n            .collection(\"userFollowing\")\n            .doc(props.route.params.uid)\n            .set({})\n\n        firebase.firestore()\n            .collection(\"follower\")\n            .doc(props.route.params.uid)\n            .collection(\"asFollower\")\n            .doc(firebase.auth().currentUser.uid)\n            .set({})\n    }\n    const onUnfollow = () => {\n        firebase.firestore()\n            .collection(\"following\")\n            .doc(firebase.auth().currentUser.uid)\n            .collection(\"userFollowing\")\n            .doc(props.route.params.uid)\n            .delete()\n\n        firebase.firestore()\n            .collection(\"follower\")\n            .doc(props.route.params.uid)\n            .collection(\"asFollower\")\n            .doc(firebase.auth().currentUser.uid)\n            .delete()\n    }\n\n    const onLogout = () => {\n        firebase.auth().signOut();\n    }\n\n    const trash = (downloadURL) => {\n        firebase.firestore()\n            .collection('posts')\n            .doc(firebase.auth().currentUser.uid)\n            .collection('userPosts')\n            .doc(downloadURL)\n            .delete()\n\n        console.log(\"delete : \" + downloadURL)\n    }\n\n    const ChangeProfile = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [1, 1],\n            quality: 1,\n        });\n        console.log(result);\n      \n        if (!result.cancelled) {\n            setImage(result.uri);\n            const uri = image;\n            const childPath = `picture/${firebase.auth().currentUser.uid}/${Math.random().toString(36)}`;\n            console.log(childPath)\n\n            const response = await fetch(uri);\n            const blob = await response.blob();\n\n            const task = firebase\n                .storage()\n                .ref()\n                .child(childPath)\n                .put(blob);\n\n            const taskProgress = snapshot => {\n                console.log(`transferred: ${snapshot.bytesTransferred}`)\n            }\n\n            const taskCompleted = () => {\n                task.snapshot.ref.getDownloadURL().then((snapshot) => {\n                    savePostData(snapshot);\n                    console.log(snapshot)\n                })\n            }\n\n            const taskError = snapshot => {\n                console.log(snapshot)\n            }\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n        }\n    }\n\n    const savePostData = (downloadURL) => {\n\n        firebase.firestore()\n            .collection('users')\n            .doc(firebase.auth().currentUser.uid)\n            .set({\n                name: user.name,\n                email: user.email,\n                picture: downloadURL\n            })\n    }\n\n    if (user === null) {\n        return <View />\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.containerInfo}>\n                {console.log(user)}\n                <Text>{user.name}</Text>\n                <Text>{user.email}</Text>\n                <TouchableHighlight>\n                <Image\n                    source={{uri: user.picture}}\n                    style={styles.picture}\n                />  \n                </TouchableHighlight>\n                {user.picture ? (\n                    <Image\n                        source={{uri: user.picture}}\n                        style={styles.picture}\n                    />  \n                    ) : <Image \n                            source={require('../../assets/favicon.png')}\n                            style={styles.picture}\n                        />}\n\n                {props.route.params.uid !== firebase.auth().currentUser.uid ? (\n                    <View>\n                        {following ? (\n                            <Button\n                                title=\"Following\"\n                                onPress={() => onUnfollow()}\n                            />\n                        ) :\n                            (\n                                <Button\n                                    title=\"Follow\"\n                                    onPress={() => onFollow()}\n                                />\n                            )}\n                    </View>\n                ) : (\n                    <View>\n                        <Button\n                            title=\"Change profile picture\"\n                            onPress={() => ChangeProfile()}\n                        />\n                \n                    <Button\n                        title=\"Logout\"\n                        onPress={() => onLogout()}\n                    />\n                    </View>\n                    )}\n                <Text>Following : {follower}</Text>\n                <Text>Follower : {asfollower}</Text>\n                <Text>Posts: {postSize}</Text>\n\n                <Image\n                    source={{uri: user.picture}}\n                    style={styles.picture}\n                />  \n\n            </View>\n\n            <View style={styles.containerGallery}>\n                <FlatList\n                    numColumns={3}\n                    horizontal={false}\n                    data={userPosts}\n                    renderItem={({ item }) => (\n                        <View\n                            style={styles.containerImage}>\n\n                            <Image\n                                style={styles.image}\n                                source={{ uri: item.downloadURL }}\n                            />\n\n                            <Image \n                                source={require('../../assets/croix.png')}\n                                style={{flex: 1, width: 64, height: 64, margin: 2, alignItems: 'center', alignContent: 'center'}}\n                                onPress={() => trash(item)}\n                            />\n\n                        </View>\n\n                        \n\n                    )}\n\n                />\n            </View>\n        </View>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop: 25\n    },\n    containerInfo: {\n        margin: 20\n    },\n    containerGallery: {\n        flex: 1\n    },\n    containerImage: {\n        flex: 1 / 3\n\n    },\n    image: {\n        flex: 1,\n        aspectRatio: 1 / 1\n    },\n    picture: {\n        flex: 1,\n        width: 48,\n        height: 48,\n        borderRadius: 50\n    }\n})\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    posts: store.userState.posts,\n    following: store.userState.following\n})\nexport default connect(mapStateToProps, null)(Profile);\n"]},"metadata":{},"sourceType":"module"}